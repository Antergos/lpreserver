#!/bin/sh
# Helper script to create iscsi / stunnel target for life-preserver backup
# Author: Kris Moore
# License: BSD

if [ "`id -u`" != "0" ] ;then
  echo "Needs to be run as root on the remote iSCSI backup server"
  exit 1
fi

which stunnel > /dev/null;
if [ $? -ne 0 ] ; then
  echo "stunnel not found, would you like to install now?"
  echo -e "(y/n)>\c"
  read tmp
  if [ $tmp != "y" ] ; then
   	exit 1
  fi

  pkg install -y stunnel;

  which stunnel > /dev/null;
  if [ $? -ne 0 ]; then
    exit 1
  fi
fi

getInfos() {

echo "Enter the target host name (example.com or IP)"
echo -e ">\c"
read targetHost
if [ -z "$targetHost" ]; then
   exit 1
fi

# Lets get the target name automatically
if [ -e "/etc/ctl.conf" ] ; then
 tNum=0
 while : ; do
   grep -q "target${tNum}" /etc/ctl.conf
   if [ $? -ne 0 ] ; then
      targetName="target${tNum}"
      break;
   fi
   tNum=`expr ${tNum} + 1`
 done
else
  targetName="target0"
fi

echo "Enter the CHAP username"
echo -e ">\c"
read userName
if [ -z "$userName" ]; then
   exit 1
fi

echo "Enter the CHAP password (12-16 chars)"
echo -e ">\c"
read userPass
if [ -z "$userPass" ]; then
   exit 1
fi

passLen=`echo $userPass | wc -m | awk '{print $1}'`
if [ $passLen -gt 16 -o $passLen -lt 12 ] ; then
  echo "Error: Password needs to be between 12-16 chars"
  echo "Enter the CHAP password (12-16 chars)"
  echo -e ">\c"
  read userPass
  passLen=`echo $userPass | wc -m | awk '{print $1}'`
  if [ $passLen -gt 16 -o $passLen -lt 12 ] ; then
    echo "Invalid length!"
    exit 1
  fi
fi

echo "Enter the ZVOL name (I.E. tank/myzvol)"
echo -e ">\c"
read zvolName
if [ -z "$zvolName" ]; then
   exit 1
fi

# Check that the zvol name looks correct
zpool=`echo $zvolName | cut -d '/' -f 1`
zfs list $zpool >/dev/null 2>/dev/null
if [ $? -ne 0 ] ; then
  echo "No such zpool: $zpool"
  echo "Enter the ZVOL name (I.E. tank/myzvol)"
  echo -e ">\c"
  read zvolName
  if [ -z "$zvolName" ]; then
     exit 1
  fi
fi


echo "Enter the ZVOL size (I.E. 800M, 4G, 1T)"
echo -e ">\c"
read zvolSize
if [ -z "$zvolSize" ]; then
   exit 1
fi

echo $zvolSize | grep -q -e "M" -e "G" -e "T"
if [ $? -ne 0 ] ; then
  echo "Missing M/G/T size indicator"
  echo "Enter the ZVOL size (I.E. 800M, 4G, 1T)"
  echo -e ">\c"
  read zvolSize
  if [ -z "$zvolSize" ]; then
   exit 1
  fi
fi

}

getInfos

echo "Does this look correct?"
echo "Target host: $targetHost"
echo "Target name: $targetName"
echo "Username: $userName"
echo "Password: $userPass"
echo "ZVOL name: $zvolName"
echo "ZVOL size: $zvolSize"
echo -e "(y/n)>\c"
read tmp
case $tmp in
  y|Y) break ;;
  n|N) getInfos ;;
  *) exit 1 ;;
esac

# Lets first create the new ZVOL
zfs create -s -V $zvolSize $zvolName
if [ $? -ne 0 ] ; then
   echo "ERROR creating zvol!"
   exit 1
fi

# Enable ctld/stunnel daemon
sysrc -f /etc/rc.conf ctld_enable="YES"
sysrc -f /etc/rc.conf stunnel_enable="YES"

# If no /etc/ctl.conf, create the default header
if [ ! -e "/etc/ctl.conf" ] ; then
  cat >/etc/ctl.conf << EOF
portal-group pg0 {
	discovery-auth-group no-authentication
	listen 0.0.0.0
	listen [::]
}
EOF
  chmod 600 /etc/ctl.conf
fi

zvol="/dev/zvol/$zvolName"
cat >>/etc/ctl.conf << EOF

target iqn.2012-06.com.lpreserver:${targetName} {
	portal-group pg0
	chap ${userName} ${userPass}

	lun 0 {
		path ${zvol}
		size ${zvolSize}
	}
}
EOF


# Setup stunnel config
if [ ! -e "/usr/local/etc/stunnel/stunnel.conf" ] ; then
  mkdir -p /usr/local/etc/stunnel >/dev/null 2>/dev/null
  cat >/usr/local/etc/stunnel/stunnel.conf << EOF
setuid = stunnel
setgid = nogroup
client = no

[iscsi]
accept = 9555
connect = 127.0.0.1:3260
cert = /usr/local/etc/stunnel/iscsi.pem

EOF
fi

# If the stunnel cert is missing, lets create it now
if [ ! -e "/usr/local/etc/stunnel/iscsi.pem" ] ; then
  openssl genrsa -out /usr/local/etc/stunnel/key.pem 2048
  openssl req -new -x509 -key /usr/local/etc/stunnel/key.pem -out /usr/local/etc/stunnel/cert.pem -days 1095
  cat /usr/local/etc/stunnel/key.pem /usr/local/etc/stunnel/cert.pem >> /usr/local/etc/stunnel/iscsi.pem
fi

# Open the ipfw ports
if [ -e "/etc/ipfw.rules" ] ; then
  echo "ip4 9555" >> /etc/ipfw.openports

  # Restart firewall if needed
  service ipfw start
fi

# Start the services
service ctld stop
service ctld start
service stunnel stop
killall -9 stunnel
sleep 1
service stunnel start

# Create the LPS file
cat >${userName}.lps << EOF
[Life-Preserver LPS]
ihost: ${targetHost}
iuser: ${userName}
ipassword: ${userPass}
itarget: ${targetName}
EOF

echo "Created ${userName}.lps"
